/*
Double pointer algorithm. From the two sides to the middle, 
after discovering the first pair of different characters, either 
delete the left side or delete the right side.
*/

class Solution {
public:
    bool validPalindrome(string &s) {
        int left = 0, right = s.size() - 1;
        while(left < right){
            if(s[left] != s[right])
                return isValid(s, left, right - 1) || isValid(s, left + 1, right);
            ++left;
            --right;
        }
        return true;
    }

private:
    bool isValid(string s, int left, int right){
        while(left < right){
            if(s[left] != s[right])
                return false;
            ++left;
            --right;
        }
        return true;
    }
};
