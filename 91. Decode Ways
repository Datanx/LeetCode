%
let x = s.substr(i-1,2);
x>0 && x<10:    dp[i]=dp[i-1]
x==10:          dp[i]=dp[i-2]
x>10&&x<20:     dp[i]=dp[i-1]+dp[i-2]
x==20:          dp[i]=dp[i-2]
x>20&&x<=26:    dp[i]=dp[i-1]+dp[i-2]
x>26&&x%10!=0: dp[i]=dp[i-1];
x>26&&x%10==0: return 0
%

class Solution {
public:
    int numDecodings(string s) {
        if(s.empty() || s[0] == '0')
            return 0;
        if(s.length() == 1)
            return 1;
      
        vector<int> memo(s.size(), 0);
        memo[0] = 1;
        string s1 = s.substr(0,2);
        int num1 = atoi(s1.c_str());
        
        if(num1 <= 20 && num1 % 10 == 0)
            memo[1] = 1;
        else if(num1 > 10 && num1 < 20)
            memo[1] = 2;
        else if(num1 > 20 && num1 <= 26)
            memo[1] = 2;
        else if(num1 > 26 && num1 % 10 != 0)
            memo[1] = 1;
        else
            return 0;
        
        if(s.size() > 2){
            for(int i = 2; i < s.length(); i++){
            string s2 = s.substr(i-1, 2);
            int num2 = atoi(s2.c_str());
                if((num2 > 26 && num2 % 10 != 0) || (num2 > 0 && num2 < 10)){
                    memo[i] = memo[i-1];
                }else if(num2 > 10 && num2 <= 26 && num2 != 20){
                    memo[i] = memo[i-1] + memo[i-2];
                }else if(num2 == 10 || num2 == 20){
                    memo[i] = memo[i-2];
                }else if(num2 == 0 || num2 % 10 == 0){
                    return 0;
                }
            }
        }
        
        return memo[s.length()-1];
    }
};
