class Solution {
private:
    void check(vector<vector<char>>& board, int i, int j, int row, int col){
        if(i < 0 || i >= row || j < 0 || j >= col)
            return;
        
        if(board[i][j] == 'O'){
            board[i][j] = 'Y';
            if(i > 1)
                check(board, i-1, j, row, col);
            if(i < row-1)
                check(board, i+1, j, row, col);
            if(j > 1)
                check(board, i, j-1, row, col);
            if(j < col-1)
                check(board, i, j+1, row, col);
        }
    }
public:
    void solve(vector<vector<char>>& board) {
        if(board.empty())
            return;
        
        int m = board.size(), n = board[0].size();
        
        for(int i = 0; i < m; i++){
            check(board, i, 0, m, n);
            if(n > 1)
                check(board, i, n-1, m, n);
        }
        
        for(int j = 1; j < n-1; j++){
            check(board, 0, j, m, n);
            if(m > 1)
                check(board, m-1, j, m, n);
        }
        
        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                if(board[i][j] == 'O')
                    board[i][j] = 'X';
        
        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                if(board[i][j] == 'Y')
                    board[i][j] = 'O';
    }
};
