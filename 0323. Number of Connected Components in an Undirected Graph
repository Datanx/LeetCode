class Solution {
public:
    int countComponents(int n, vector<pair<int, int>>& edges) {
        vector<int> parent(n);
        for(int i = 0; i < n; i++)
            parent[i] = i;
        
        for(auto edge : edges){
            int pRoot = find(parent, edge.first), qRoot = find(parent, edge.second);
            if(pRoot != qRoot){
                n--;
                parent[pRoot] = qRoot;
            }
        }
        return n;
    }
    
private:
    int find(vector<int>& parent, int i){
        int start = i, temp;
        while(parent[i] != i)
            i = parent[i];
        
        while(start != i){
            temp = parent[start];
            parent[start] = i;
            start = temp;
        }
        return i;
    }
};
