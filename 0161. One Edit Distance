/// One Pass Algorithms
/// Time Complexity: O(n)
/// Space Complexity: O(1)
class Solution {
public:
    bool isOneEditDistance(string s, string t) {
        if(s.size() == 0)
            return t.size() == 1;
        if(t.size() == 0)
            return s.size() == 1;
        
        int si = 0, ti = 0;
        while(si < s.size() && ti < s.size() && s[si] == t[ti])
            si++, ti++;
        si--, ti--;
        
        int sj = s.size() - 1, tj = t.size() - 1;
        while(sj > si && tj > ti && s[sj] == t[tj])
            sj--, tj--;
        
        if(si + 1 == sj && ti == tj)
            return true;
        if(ti + 1 == tj && si == sj)
            return true;
        if(si + 1 == sj && ti + 1 == tj)
            return true;
        
        return false;
    }
};
