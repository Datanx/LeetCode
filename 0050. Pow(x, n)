/// Classic Divide and Conquer to get power
/// Deal with both positive and negative n correctly
///
/// Time Complexity: O(logn)
/// Space Complexity: O(logn)
class Solution {
public:
    double myPow(double x, int n) {
        if(n == 0)
            return 1.0;
        
        double t = myPow(x, n / 2);
        if(n % 2 == 0)
            return t * t;
        else if(n > 0)
            return t * t * x;
        return t * t / x;
    }
};
